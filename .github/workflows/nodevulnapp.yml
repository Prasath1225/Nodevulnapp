# Publish GitHub workflow artifacts tutorial example
name: Publish GitHub Actions Artifacts Example

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
       
  archive-build-artifacts:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Step 1 - Create a temporary artifact downloads folder
        run: mkdir downloads

      # Runs a single command using the runners shell
      - name: Installing njscan SAST tool
        run: pip install njsscan
        
         # Runs a single command using the runners shell
      
      - name: Running njscan SAST tool
        continue-on-error: true
        run: njsscan ./ -o nodevulnappoutput.json
        
        # Runs a single command using the runners shell
      - name: Installing Trufflehog3 tool
        run: pip install trufflehog3
          
          # Runs a single command using the runners shell
      - name: Running Trufflehog3 tool and output
        continue-on-error: true
        run: trufflehog3 ./ -f json -o outputforsecretscan.json
        
      - run: | 
         sudo cp nodevulnappoutput.json downloads
         sudo cp outputforsecretscan.json downloads
         
         
      - name:  Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
          name: Scanresults
          path: downloads
          
          # Runs a single command using the runners shell
      - name: Installing zap
        continue-on-error: true
        run: | 
         java -version
         ls
         sudo apt-get update
         sudo docker pull owasp/zap2docker-stable
         sudo docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py \
         -t http://testphp.vulnweb.com -J zapscan.json
