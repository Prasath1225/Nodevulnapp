# Publish GitHub workflow artifacts tutorial example
name: Publish GitHub Actions Artifacts Example

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
       
  archive-build-artifacts:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Step 1 - Create a temporary artifact downloads folder
        run: mkdir downloads
        
         # Runs a single command using the runners shell
      - name: Installing njscan SAST tool
        run: pip install njsscan
        
         # Runs a single command using the runners shell
      
      - name: Running njscan SAST tool
        continue-on-error: true
        run: |
         njsscan ./ -o nodevulnappoutput.json
         cp nodevulnappoutput.json /downloads
        
        # Runs a single command using the runners shell
      - name: Installing Trufflehog3 tool
        run: pip install trufflehog3
          
          # Runs a single command using the runners shell
      - name: Running Trufflehog3 tool and output
        continue-on-error: true
        run: |
         trufflehog3 ./ -f json -o outputforsecretscan.json
         cp outputforsecretscan.json /downloads
        
      #- uses: canastro/copy-file-action@master
        #with:
          #source: "nodevulnappoutput.json"
          #target: "downloads/nodevulnappoutput.json"
          
      #- uses: canastro/copy-file-action@master
        #with:
           #source: "outputforsecretscan.json"
           #target: "downloads/outputforsecretscan.json"
   
          
    
      - name: Step 3 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
          name: Scanresults
          path: downloads
